enum UserStatus {
  Active
  Inactive
}

type User {
  id: String!
  email: String!
  status: UserStatus!
  createdAt: String!
  updatedAt: String!
}

input CreateAccountInput {
  email: String!
  password: String!
  confirmPassword: String!
}

type UsersResponse {
  users: [User!]!
  totalCount: Int! 
}

extend type Query {
  users(limit: Int!, offset: Int!): UsersResponse!
}

extend type Mutation {
  createAccount(input: CreateAccountInput!): MessageResponse!
  setUserDeletedStatus(userId: UUID!, deleted: Boolean!): MessageResponse!
}
