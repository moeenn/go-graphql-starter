package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"context"
	"graphql/graph"
	"graphql/graph/gmodel"
	"time"

	"github.com/google/uuid"
)

// Login is the resolver for the login field.
func (r *mutationResolver) Login(ctx context.Context, input gmodel.LoginInput) (*gmodel.LoginResponse, error) {
	now := time.Now().Format(time.RFC3339)

	res := &gmodel.LoginResponse{
		User: &gmodel.User{
			ID:        uuid.NewString(),
			Email:     input.Email,
			Status:    gmodel.UserStatusActive,
			CreatedAt: now,
			UpdatedAt: now,
		},
		Token: &gmodel.UserToken{
			AccessToken: "some random token value",
			Expiry:      100200300,
		},
	}

	return res, nil
}

// Mutation returns graph.MutationResolver implementation.
func (r *Resolver) Mutation() graph.MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
